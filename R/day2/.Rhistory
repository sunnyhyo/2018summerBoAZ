install.packages("dplyr") ; install.packages("Amelia")
library(dplyr);library(Amelia)
getwd()    ##경로가 어디로 설정 되어있는지 확인
setwd("C:/Users/HS/Documents/GitHub/2018summerBoAZ/R/day2")   ##지정된 곳에 파일이 있어야함
titanic <- read.csv("titanic3.csv",sep=",")
titanic
sum(is.na(titan))  ##총 1452개의 결측치가 있다.
titan <- tbl_df(titanic)
titan
sum(is.na(titan))  ##총 1452개의 결측치가 있다.
windows()  ##R에서 시각화를 할 때 항상 윈도우 창을 켜주고 하는게 편하다.
missmap(titan)  ##시각화를 통해서 어느 변수에 결측치가 존재하는지 알아보기 쉬움
which(is.na(titan),arr.ind=T)  ##결측치가 있는 위치의 행과 열번호를 보여줌
####apply류 함수####
set.seed(2)
y<- round(rnorm(25,100,15))
####apply류 함수####
set.seed(2)   #난수생성시 고정
x <- round(rnorm(25, 50, 10))
y<- round(rnorm(25,100,15))
alpha <- sample(c("A", "B", "C"), 25, replace=T)
f <- factor(alpha)
xyf<-data.frame(x=x,y=y, f=f)
str(xyf)
head(xyf)
apply(xyf[,1:2],2,sum)
apply(xyf[,1:2],2,mean)
apply(xyf[,1:2],1,mean)
tapply(xyf$x,xyf$f,mean)
tapply(xyf$y,xyf$f,sum)
iris
tapply(iris$Sepal.Length,iris$Species,mean)
tapply(iris$Sepal.Width,iris$Species,mean)
tapply(iris$Petal.Length,iris$Species,max)
m1 <- list(a = c(1:10), b = c(11:20))
m2 <- list(c = c(21:30), d = c(31:40))
lapply(m1,sum)
lapply(m2,mean)
mapply(sum,m1$a,m2$d)
mapply(mean,m1$a,m1$b,m2$d,m2$c)
titan %>% select(pclass, survived, sex, age) %>%
filter(age==20 & sex=="female")
titan %>% select(pclass, survived, sex, age) %>%
filter(age==20 , sex=="female")
titan %>% select(pclass, survived, sex, age) %>%
filter(age==20 && sex=="female")
titan %>% select(pclass, survived, sex, age) %>%
filter(age==20 , sex=="female")
titan %>% select(age) %>% arrange(age) %>% head()
titan %>% select(age) %>% arrange(-age) %>% head()
titan %>% select(age) %>% arrange(desc(age)) %>% head()
titan %>% mutate(fare_Won = fare*1200)
mean(fare)
mean(titan$fare)
titan$fare
titan %>% mutate(fare_Won = fare*1200)
titan %>% mutate(fare_1000=fare/1200)
titan %>% transmute(fare_Won = fare*1200) %>%head() #추가한 변수만 보여줌
titan %>% transmute(fare_Won = fare*1200 & fare_1000=fare/1200) %>%head() #추가한 변수만 보여줌
titan %>% transmute(fare_Won = fare*1200 , fare_1000=fare/1200) %>%head() #추가한 변수만 보여줌
names(titan)
titan$fare
mean(titan$fare)
summarise(titan$fare)
summarise(titan$fare)
summary(titan$fare)
summary(titan)
titan %>% mutate(fare_std = (fare - mean(fare, na.rm=T)) std(fare, na.rm=T) )/ ) %>%
filter(fare_std) %>% head(6)
titan %>% mutate(fare_std = (fare - mean(fare, na.rm=T))/ std(fare, na.rm=T) ) ) %>%
filter(fare_std) %>% head(6)
titan %>% transmute(fare_std = (fare - mean(fare, na.rm=T))/ std(fare, na.rm=T) ) ) %>% head(6)
titan %>% transmute(fare_std = (fare - mean(fare, na.rm=T))/ sd(fare, na.rm=T) ) ) %>% head(6)
titan %>% transmute(fare_std = (fare - mean(fare, na.rm=T))/ sd(fare, na.rm=T) ) ) %>% arrange(-fare_std) %>% head(6)
titan %>% transmute(fare_std = (fare - mean(fare, na.rm=T))/ sd(fare, na.rm=T) )  %>% arrange(-fare_std) %>% head(6)
titan %>% group_by(sex) %>% summarise(mean_age=mean(age,na.rm=T))
titan %>% group_by(pclass) %>% summarise(mean_age=mean(age,na.rm=T))
titan %>% group_by(survived) %>% summarise(max=max(age,na.rm=T))
titan %>% group_by(survived) %>% summarise(min=min(age,na.rm=T))
titan %>% group_by(survived) %>% summarise(n=n()) ###이렇게 여러가지 함수를 적용할 수 있다.
titan %>% group_by(pclass) %>% summarise(mean_fare=mean(farw,na.rm=T))
titan %>% group_by(pclass) %>% summarise(mean_fare=mean(fare,na.rm=T))
titan %>% group_by(survived) %>% summarise(max=max(age,na.rm=T))
titan %>% group_by(survived) %>% summarise(min=min(age,na.rm=T))
titan %>% group_by(survived) %>% summarise(n=n()) ###이렇게 여러가지 함수를 적용할 수 있다.
titan %>% filter(pclass==1,age>30&age<40,sex=="female") %>% group_by(survived) %>%
summarise(n=n())
####join 함수
####data frame을 조건에 맞게 join 시켜줌 ,sql 하고 비슷
####left , right , inner, full join 이 있음
set.seed(1)
log <- data.frame( user_id = sample(c(1,2,3), 10, TRUE), item_id =
sample( c(1,2,3), 10, TRUE ), correct = sample(c(0,1), 10, TRUE) )
users <- data.frame( user_id = c(1,2,4), age = c(20,20,30) )
items <- data.frame( item_id = 1:3, item = c("1+1","2*2","3/3") )
log %>% left_join(users,"user_id")
log %>% left_join(users,"user_id") %>% left_join(items,"item_id")
log
log <- data.frame( user_id = sample(c(1,2,3), 10, TRUE), item_id =
sample( c(1,2,3), 10, TRUE ), correct = sample(c(0,1), 10, TRUE) )
users <- data.frame( user_id = c(1,2,4), age = c(20,20,30) )
items <- data.frame( item_id = 1:3, item = c("1+1","2*2","3/3") )
users
items
log %>% left_join(users,"user_id")
log %>% left_join(users,"user_id") %>% left_join(items,"item_id")
log %>% right_join(users,"user_id")
log %>% inner_join(users,"user_id")
log %>% inner_join(users,"user_id") %>% inner_join(items,"item_id")
log %>% full_join(users,"user_id")
titan %>% select(age) %>% arrange(age) %>% head()
titan %>% select(age) %>% arrange(-age) %>% head()
titan %>% select(age) %>% arrange(desc(age)) %>% head()
titan %>% select(age) %>% arrange(age) %>% head()
titan %>% select(age) %>% arrange(-age) %>% head()
titan %>% select(age) %>% arrange(desc(age)) %>% head()
titi <- fread("titanic3.csv") #대용량자료를 빨리 불러옴
?tbl_df
?tbl_df()
titanic
titan
class(titanic)
class(titi)
class(titan)
